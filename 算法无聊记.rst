称球问题
=========

https://www.zhihu.com/question/20854512

http://mindhacks.cn/2008/06/13/why-is-quicksort-so-quick/

N个分三个, 不满足整除三没关系, 假设a,b,c为M, M为N的任意分量, 然后a+b+c=M, 然后a, b两堆球数量相等, c和他们可等可不等,

如果a,b重量相同, 则坏球在c上，假设a或b重，则坏球在重的一方，然后继续.

我第一反应是根据二分查找，分两等分, 两等分之后遇到奇数个数的时候可以拿出一个或者从上一次中拿进来一个, 不过不是最优解.


公式嘛: 记次数为n, 球的数量为N, 有((3^n) - 1) / 2 = N, 结果取上界.

思路是等分概率



KMP算法
=========

http://blog.csdn.net/v_july_v/article/details/7041827

首先, p和s, 求s是否在p中, 那么s的匹配的p的子串至少都是以s首字符开头的子串, 比如s=abcdab, 匹配的p的字符串至少都是a开头的

next数组(最大公共前后缀长度)的意义是: 找出某个字符前面有多少个首字符开头的字符串

因为你下一次移动的距离肯定是至少是以首字符开头, 比如s=abcd, 要匹配s, 那么至少是a开头, 如果s都没有以a(首字符)的公共前缀, 那么就是无脑移失配字符的位置+1(前两个字符串都为1)了,

比如abcd, b, c, d如果其中一个失配, 那么对应移动的距离就是1, 2, 3, 这也是可以理解的, 因为比如c失配, 那么下一个肯定是a和c对应的字符串匹配的

如果s中出现了其他以首字符的前缀子串, 比如abcaf, 是以a开头的子串a出现了两次, abcabf是以ab为前缀的子串出现了两次, 那么比如第二个a失配, 那么人的判断自然是第一个a和第二个a匹配的字符串匹配,

也就是右移3 + 1 = 4 = 3 - (-1)

next数组的意义就是上面的步骤, 往右移动几位, 而前后缀最大公共长度的意义是找出下一次移动的时候保证一定匹配的是首字符, 这样可得出next数组

BM算法: http://www.ruanyifeng.com/blog/2013/05/boyer-moore_string_search_algorithm.html


马拉车算法
============

最长回文数

https://segmentfault.com/a/1190000003914228


